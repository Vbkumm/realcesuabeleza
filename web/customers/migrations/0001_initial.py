# Generated by Django 3.2 on 2022-04-11 15:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('businesses', '0003_auto_20220411_1328'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Qual nome da Cliente*')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this customer should be treated as active. Unselect this instead of deleting customer.', verbose_name='customer active')),
                ('birth_date', models.CharField(blank=True, max_length=150, null=True, verbose_name='Data de nascimento*')),
                ('id_federal', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='CNPJ ou CPF')),
                ('email', models.EmailField(max_length=254, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('receive_email', models.BooleanField(default=False, verbose_name='Marque para bloquear emails automaticos')),
                ('schedule_active', models.BooleanField(default=False, verbose_name='Cliente credenciada ao agendamento online')),
                ('updated_at', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_business', to='businesses.businessmodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customer_list',
                'db_table': 'customer_db',
            },
        ),
        migrations.CreateModel(
            name='CustomerUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_user', to='customers.customermodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerPhoneModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=150, null=True, verbose_name='Telefone')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this address should be treated as active. Unselect this instead of deleting address.', verbose_name='phone active')),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_phone_author', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_phone', to='customers.customermodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer_phone',
                'verbose_name_plural': 'customer_phone_list',
                'db_table': 'customer_phone_db',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddressModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this address should be treated as active. Unselect this instead of deleting address.', verbose_name='address active')),
                ('zip_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rua')),
                ('street_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Numero')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_address_author', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_address', to='customers.customermodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer_address',
                'verbose_name_plural': 'customer_address_list',
                'db_table': 'customer_address_db',
            },
        ),
    ]
